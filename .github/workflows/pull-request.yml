name: Pull Request
on:
  push:
    branches:
      - 'DIC1-*'
      - 'IS-*'


jobs:
  build:
    runs-on: ubuntu-latest

    env:
      ENABLE_SECRETS_SCAN: false
      ENABLE_DEPENDENCIES_SCAN: false
      ENABLE_TESTS: true
      ENABLE_SONAR_SCAN: false
      ENABLE_PACKAGE: false

    steps:
      - uses: actions/checkout@v3
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - uses: ./.github/actions/setup-env

#      - uses: ./.github/actions/secrets-scan
#        with:
#          ENABLED: ${{ env.ENABLE_SECRETS_SCAN }}
#
#      - uses: ./.github/actions/dependency-scan
#        with:
#          ENABLED: ${{ env.ENABLE_DEPENDENCIES_SCAN }}
#          NVD_API_KEY: ${{ secrets.NVD_API_KEY }}

      - uses: ./.github/actions/tests
        with:
          ENABLED: ${{ env.ENABLE_TESTS }}

      - uses: ./.github/actions/quality-gate
        with:
          ENABLED: ${{ env.ENABLE_SONAR_SCAN }}
          PROJECT_KEY: "seenibu_todos"
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST: "https://sonarcloud.io"

#      - uses: ./.github/actions/package
#        with:
#          ENABLED: ${{ env.ENABLE_PACKAGE }}
#
#
#      - name: Set up Docker Buildx
#        if: 1 > 2
#        uses: docker/setup-buildx-action@v3
#
#      - name: Build Docker image
#        if: 1 > 2
#        run: docker build -t my-app:latest .
#
#      - name: Install Trivy
#        if: 1 > 2
#        uses: aquasecurity/trivy-action@master
#        with:
#          scan-type: image
#          image-ref: my-app:latest
#          format: json #json,xml,table
#          exit-code: 0 # 1: échoue si vulnérabilités trouvées, 0 : sinon. Remettre a 1
#          severity: CRITICAL,HIGH #unknown, low,medium, high, critical
#          ignore-unfixed: true #ignore celles qui n'ont pas de correctifs
#

